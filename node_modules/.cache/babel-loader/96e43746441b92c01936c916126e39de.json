{"ast":null,"code":"import _regeneratorRuntime from \"/home/juan/Desktop/program/cursos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/juan/Desktop/program/cursos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BASE_URL = \"http://localhost:3001\";\n\nvar delay = function delay(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nvar randomNumber = function randomNumber() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nvar simulateNetworkLatency = function simulateNetworkLatency() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;\n  return delay(randomNumber(min, max));\n};\n\nfunction callApi(_x) {\n  return _callApi.apply(this, arguments);\n}\n\nfunction _callApi() {\n  _callApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint) {\n    var options,\n        url,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return simulateNetworkLatency();\n\n          case 3:\n            options.headers = {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            };\n            url = BASE_URL + endpoint;\n            _context.next = 7;\n            return fetch(url, options);\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _callApi.apply(this, arguments);\n}\n\nvar api = {\n  badges: {\n    list: function list() {\n      return callApi(\"/badges\");\n    },\n    create: function create(badge) {// throw Error(\"500: Server Error\");\n      // return callApi(`/badges`, {\n      // \tmethod: \"POST\",\n      // \tbody: JSON.stringify(badge),\n      // });\n    },\n    read: function read(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId));\n    },\n    update: function update(badgeId, updates) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: \"PUT\",\n        body: JSON.stringify(updates)\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove: function remove(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: \"DELETE\"\n      });\n    }\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/juan/Desktop/program/cursos/react/platzi-badges/src/api.js"],"names":["BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","options","headers","Accept","url","fetch","response","json","data","api","badges","list","create","badge","read","badgeId","update","updates","method","body","JSON","stringify","remove"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,uBAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,EAAD;AAAA,SAAQ,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,WAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAvB;AAAA,GAAZ,CAAR;AAAA,CAAd;;AACA,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,MAACC,GAAD,uEAAO,CAAP;AAAA,MAAUC,GAAV,uEAAgB,CAAhB;AAAA,SACpBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAD1B;AAAA,CAArB;;AAEA,IAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAACL,GAAD,uEAAO,EAAP;AAAA,MAAWC,GAAX,uEAAiB,IAAjB;AAAA,SAC9BP,KAAK,CAACK,YAAY,CAACC,GAAD,EAAMC,GAAN,CAAb,CADyB;AAAA,CAA/B;;SAGeK,O;;;;;sEAAf,iBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiCC,YAAAA,OAAjC,2DAA2C,EAA3C;AAAA;AAAA,mBACOH,sBAAsB,EAD7B;;AAAA;AAGCG,YAAAA,OAAO,CAACC,OAAR,GAAkB;AACjB,8BAAgB,kBADC;AAEjBC,cAAAA,MAAM,EAAE;AAFS,aAAlB;AAKMC,YAAAA,GARP,GAQalB,QAAQ,GAAGc,QARxB;AAAA;AAAA,mBASwBK,KAAK,CAACD,GAAD,EAAMH,OAAN,CAT7B;;AAAA;AASOK,YAAAA,QATP;AAAA;AAAA,mBAUoBA,QAAQ,CAACC,IAAT,EAVpB;;AAAA;AAUOC,YAAAA,IAVP;AAAA,6CAYQA,IAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,IAAMC,GAAG,GAAG;AACXC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IADO,kBACA;AACN,aAAOZ,OAAO,CAAC,SAAD,CAAd;AACA,KAHM;AAIPa,IAAAA,MAJO,kBAIAC,KAJA,EAIO,CACb;AACA;AACA;AACA;AACA;AACA,KAVM;AAWPC,IAAAA,IAXO,gBAWFC,OAXE,EAWO;AACb,aAAOhB,OAAO,mBAAYgB,OAAZ,EAAd;AACA,KAbM;AAcPC,IAAAA,MAdO,kBAcAD,OAdA,EAcSE,OAdT,EAckB;AACxB,aAAOlB,OAAO,mBAAYgB,OAAZ,GAAuB;AACpCG,QAAAA,MAAM,EAAE,KAD4B;AAEpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAF8B,OAAvB,CAAd;AAIA,KAnBM;AAoBP;AACAK,IAAAA,MArBO,kBAqBAP,OArBA,EAqBS;AACf,aAAOhB,OAAO,mBAAYgB,OAAZ,GAAuB;AACpCG,QAAAA,MAAM,EAAE;AAD4B,OAAvB,CAAd;AAGA;AAzBM;AADG,CAAZ;AA8BA,eAAeT,GAAf","sourcesContent":["const BASE_URL = \"http://localhost:3001\";\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst randomNumber = (min = 0, max = 1) =>\n\tMath.floor(Math.random() * (max - min + 1)) + min;\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\n\tdelay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n\tawait simulateNetworkLatency();\n\n\toptions.headers = {\n\t\t\"Content-Type\": \"application/json\",\n\t\tAccept: \"application/json\",\n\t};\n\n\tconst url = BASE_URL + endpoint;\n\tconst response = await fetch(url, options);\n\tconst data = await response.json();\n\n\treturn data;\n}\n\nconst api = {\n\tbadges: {\n\t\tlist() {\n\t\t\treturn callApi(\"/badges\");\n\t\t},\n\t\tcreate(badge) {\n\t\t\t// throw Error(\"500: Server Error\");\n\t\t\t// return callApi(`/badges`, {\n\t\t\t// \tmethod: \"POST\",\n\t\t\t// \tbody: JSON.stringify(badge),\n\t\t\t// });\n\t\t},\n\t\tread(badgeId) {\n\t\t\treturn callApi(`/badges/${badgeId}`);\n\t\t},\n\t\tupdate(badgeId, updates) {\n\t\t\treturn callApi(`/badges/${badgeId}`, {\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\tbody: JSON.stringify(updates),\n\t\t\t});\n\t\t},\n\t\t// Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n\t\tremove(badgeId) {\n\t\t\treturn callApi(`/badges/${badgeId}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\t\t},\n\t},\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}